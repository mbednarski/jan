analyze_food_task:
  description: >
    Analyze meals from today (current timestamp is {currentDateTime}) assuming that the diet should consider following aspects:
    1. Pro or anti-inflammatory
    2. High in fiber
    3. High in water content
    4. Low glycemic index
    5. Low in fat (but not extremely)
    6. Low in sugar
    7. Non-addictive
    8. Low caloric density
    9. Low in meat
    10. Low in refined grain products
    11. Low in sodium
    12. Low insulin index
    13. Microbiome-enriching
    14. Rich in fruits and vegetables
    15. Rich in legumes
    16. Filling/Satiating

    You can also include any other comment that you consider important for healthy weight loss.

    In order to get meal history for today ask a specialized agent.

    Rembmber that the main goal of user is to lose weight and keep metabolic health.
  expected_output: >
    Evaluation of todays meals according to given criteria
  agent: meal_analyst

gather_food_journal:
  description: >
    Ask user for all meals eaten today. Consider that current time is {currentDateTime} when asking for specific meals.
    All units should be in metric system and 24h clock.
    User can provide means in mixed polish/english. Ensure you translate all of them to english.
    Your read a file that contains information about today's meals and use this information with current time
    in order to ask meaninglful questions.
    Before asking for meals verify what meals are already stored in the meal tracker.
    Ask user to confirm if collected information is correct.
  expected_output: >
    List of eaten meals with time estimation. For example:
    1. Breakfast 8:00 (meal1)
    2. Lunch 13:00 (meal2)
    3. and so on
  agent: meal_interviewer


save_meals:
  description: >
    Save information about meals into a meal tracker. There should be single txt file per each day (for example 2024-17-21.txt)
    If a file already exists make sure to consolidate new information instead of replacing it
    Today is {currentDateTime}
  expected_output: >
    Summary of performed operations
  agent:
    journal_io